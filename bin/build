#!/bin/bash

set -e

PLATFORM=${1:-raylib}

usage() {
    echo "Usage: $0 [raylib|sdl]"
    echo "  raylib: Build with raylib (default)"
    echo "  sdl:    Build with SDL2"
    exit 1
}

if [[ "$1" == "-h" || "$1" == "--help" ]]; then
    usage
fi

if [[ "$PLATFORM" != "raylib" && "$PLATFORM" != "sdl" ]]; then
    echo "Error: Invalid platform '$PLATFORM'"
    usage
fi

echo "Building for platform: $PLATFORM"

mkdir -p ./target
pushd ./target/

case $PLATFORM in
    "raylib")
        echo "Compiling raylib version..."
        bear -- c++ ../code/raylib_linux_handmade.cpp -o handmade -g -lraylib -lGL -lm -lpthread -ldl -lrt -lX11
        ;;
    "sdl")
        echo "Compiling SDL version..."
        bear -- c++ ../code/sdl_handmade.cpp -o handmade -g `sdl2-config --cflags --libs`
        ;;
esac

popd

# Extend compile_commands.json for non-self-contained files
if [[ -f target/compile_commands.json ]]; then
    ./extend_compile_commands.py
    ln -sf target/compile_commands.json .
fi

echo "Build completed successfully!"
